import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    id 'java'
    id 'io.freefair.lombok' version '8.3'
    id 'io.qameta.allure' version '2.11.2'
}

def selenideVer = '6.19.0'
def allureVer = '2.24.0'
def restAssuredVersion = '5.3.2'

apply plugin: "java"
apply plugin: "io.freefair.lombok"
apply plugin: "io.qameta.allure"

tasks.withType(JavaCompile).configureEach {
    java.sourceCompatibility = JavaVersion.VERSION_17
    java.targetCompatibility = JavaVersion.VERSION_17
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    useTestNG()
}

repositories {
    mavenCentral()
}

clean.doFirst {
    def buildDir = "${rootDir}\\selenideFolder"
    def allureDir = "${rootDir}\\build\\allure-results"
    delete "$buildDir"
    delete "$allureDir"
    println "Clean Output directory for project ${project.name}"
    println "Clean Allure results directory for project ${project.name}"
}

tasks.withType(Test).tap {
    configureEach {
        testLogging {
            events = ["failed", "skipped"]
            exceptionFormat = TestExceptionFormat.FULL
            showExceptions = true
            showCauses = true
            showStackTraces = true
            showStandardStreams = true
            info.events = ["failed", "skipped"]
        }
        testLogging.showStandardStreams = true
    }
}

dependencies {
    implementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    implementation "io.rest-assured:json-path:${restAssuredVersion}"
    implementation "io.rest-assured:json-schema-validator:${restAssuredVersion}"
    implementation "com.codeborne:selenide-full-screenshot:$selenideVer"

    implementation 'org.testng:testng:7.8.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.aeonbits.owner:owner:1.0.12'
    implementation 'org.awaitility:awaitility:4.2.0'
    implementation 'org.aspectj:aspectjweaver:1.9.20.1'
    implementation 'org.assertj:assertj-core:3.23.1'
    implementation 'org.slf4j:slf4j-simple:2.0.5'
    implementation 'com.googlecode.json-simple:json-simple:1.1'

    implementation "io.qameta.allure:allure-selenide:$allureVer"
    implementation "com.codeborne:selenide:$selenideVer"
    implementation "com.codeborne:selenide-testng:$selenideVer"
    implementation "io.qameta.allure:allure-testng:$allureVer"
    implementation "io.qameta.allure:allure-commandline:$allureVer"
    implementation "io.qameta.allure:allure-assertj:$allureVer"
    implementation "io.qameta.allure:allure-java-commons:$allureVer"
    implementation 'org.aspectj:aspectjweaver:1.9.7'
}

tasks.register("baseRegressionRun", Test){
    systemProperties(System.getProperties())
    useTestNG() {
        suites("./src/test/resources/suites/regression/regression_suite.xml")
    }
}
